<?php
namespace Models\Repositories;
use isv\DB\ModelBase;

/**
* class UsersRepository Generated by ISV framework generator
* @version 1.1
* @package Models
*
*/
class UsersRepository extends ModelBase
{
    /**
    *@param string $table
    */
    protected $table = 'users';
    
    /**
    *@param mixed $id
    *type int(11)
    *@default 
    */
    protected $id="";
    
    /**
    *@param mixed $password
    *type varchar(255)
    *@default 
    */
    protected $password="";
    
    /**
    *@param mixed $email
    *type varchar(150)
    *@default 
    */
    protected $email="";
    
    /**
    *@param mixed $username
    *type varchar(250)
    *@default 
    */
    protected $username="";
    
    /**
    *@param mixed $rememberToken
    *type varchar(255)
    *@default 
    */
    protected $rememberToken="";
    
    /**
    *@param mixed $registerDate
    *type int(11)
    *@default 
    */
    protected $registerDate="";
    
    /**
    *@param mixed $lastLogin
    *type int(11)
    *@default 
    */
    protected $lastLogin="";
    
    /**
    *@param mixed $ip
    *type varchar(30)
    *@default 
    */
    protected $ip="";
    
    /**
    *@param mixed $confirmed
    *type tinyint(1)
    *@default 
    */
    protected $confirmed="";
    
    /**
    *@param mixed $blocked
    *type tinyint(1)
    *@default 
    */
    protected $blocked="";
    
    /**
    *@param mixed $role
    *type int(11)
    *@default 
    */
    protected $role="";
    
    /**
    *@param mixed $shop
    *type int(11)
    *@default 
    */
    protected $shop="";
    
    /**
     *
     * Get primary key 
     * @return  int
     */
    public function getPrimary()
    {
        return 'id';
    }
    
    /**
     *
     * Setter Function for password
     * @param $password
     * @return  $this
     */
    public function setPassword($password)
    {
        $this->password = $password;
        return $this;
    }
    
    /**
     *
     * Setter Function for email
     * @param $email
     * @return  $this
     */
    public function setEmail($email)
    {
        $this->email = $email;
        return $this;
    }
    
    /**
     *
     * Setter Function for username
     * @param $username
     * @return  $this
     */
    public function setUsername($username)
    {
        $this->username = $username;
        return $this;
    }
    
    /**
     *
     * Setter Function for rememberToken
     * @param $remembertoken
     * @return  $this
     */
    public function setRememberToken($remembertoken)
    {
        $this->rememberToken = $remembertoken;
        return $this;
    }
    
    /**
     *
     * Setter Function for registerDate
     * @param $registerdate
     * @return  $this
     */
    public function setRegisterDate($registerdate)
    {
        $this->registerDate = $registerdate;
        return $this;
    }
    
    /**
     *
     * Setter Function for lastLogin
     * @param $lastlogin
     * @return  $this
     */
    public function setLastLogin($lastlogin)
    {
        $this->lastLogin = $lastlogin;
        return $this;
    }
    
    /**
     *
     * Setter Function for ip
     * @param $ip
     * @return  $this
     */
    public function setIp($ip)
    {
        $this->ip = $ip;
        return $this;
    }
    
    /**
     *
     * Setter Function for confirmed
     * @param $confirmed
     * @return  $this
     */
    public function setConfirmed($confirmed)
    {
        $this->confirmed = $confirmed;
        return $this;
    }
    
    /**
     *
     * Setter Function for blocked
     * @param $blocked
     * @return  $this
     */
    public function setBlocked($blocked)
    {
        $this->blocked = $blocked;
        return $this;
    }
    
    /**
     *
     * Setter Function for role
     * @param $role
     * @return  $this
     */
    public function setRole($role)
    {
        $this->role = $role;
        return $this;
    }
    
    /**
     *
     * Setter Function for shop
     * @param $shop
     * @return  $this
     */
    public function setShop($shop)
    {
        $this->shop = $shop;
        return $this;
    }
    
    /**
     *
     * getter Function for $id
     * @return  $id
     */
    public function getId()
    {
        return $this->id;
    }
    
    /**
     *
     * getter Function for $password
     * @return  $password
     */
    public function getPassword()
    {
        return $this->password;
    }
    
    /**
     *
     * getter Function for $email
     * @return  $email
     */
    public function getEmail()
    {
        return $this->email;
    }
    
    /**
     *
     * getter Function for $username
     * @return  $username
     */
    public function getUsername()
    {
        return $this->username;
    }
    
    /**
     *
     * getter Function for $rememberToken
     * @return  $rememberToken
     */
    public function getRememberToken()
    {
        return $this->rememberToken;
    }
    
    /**
     *
     * getter Function for $registerDate
     * @return  $registerDate
     */
    public function getRegisterDate()
    {
        return $this->registerDate;
    }
    
    /**
     *
     * getter Function for $lastLogin
     * @return  $lastLogin
     */
    public function getLastLogin()
    {
        return $this->lastLogin;
    }
    
    /**
     *
     * getter Function for $ip
     * @return  $ip
     */
    public function getIp()
    {
        return $this->ip;
    }
    
    /**
     *
     * getter Function for $confirmed
     * @return  $confirmed
     */
    public function getConfirmed()
    {
        return $this->confirmed;
    }
    
    /**
     *
     * getter Function for $blocked
     * @return  $blocked
     */
    public function getBlocked()
    {
        return $this->blocked;
    }
    
    /**
     *
     * getter Function for $role
     * @return  $role
     */
    public function getRole()
    {
        return $this->role;
    }
    
    /**
     *
     * getter Function for $shop
     * @return  $shop
     */
    public function getShop()
    {
        return $this->shop;
    }
    
    /**    *@return bool    */
    public function validateData(){ return true; }

    /**    *@return array    */
    public function forms(){ return parent::forms(); }
}
